[
	{
		"category": "users",
		"name": "users.getAuthKey",
		"description": "Authorize user by login an password",
		"params": [
			{
				"type": "string",
				"name": "login",
				"description": "User login or email",
				"required": true
			},
			{
				"type": "string",
				"name": "password",
				"description": "User password",
				"required": false
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "users",
		"name": "users.logout",
		"description": "Kill current session and revoke authKey",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "users",
		"name": "users.get",
		"description": "Returns info about users",
		"params": [
			{
				"type": "string[]|int[]",
				"name": "userIds",
				"description": "User IDs or logins. If not specified and has authKey, returns info about current user.",
				"required": false
			},
			{
				"type": "boolean",
				"name": "extended",
				"description": "If 1, returns ExtendedUser object. Works only for current user (did not work if specified tow or more IDs).",
				"required": false
			},
			{
				"type": "string",
				"name": "extra",
				"description": "Specify if you require some additional information. Allowed keys: 'photo', 'city', 'rating'",
				"required": false
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "users",
		"name": "users.getAchievements",
		"description": "Returns stats of user",
		"params": [
			{
				"type": "int",
				"name": "userId",
				"description": "User ID",
				"required": true
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "account",
		"name": "account.create",
		"description": "Create account",
		"params": [
			{
				"type": "string",
				"name": "firstName",
				"description": "First name",
				"required": true
			},
			{
				"type": "string",
				"name": "lastName",
				"description": "Last name",
				"required": true
			},
			{
				"type": "string",
				"name": "login",
				"description": "Username; length will be in range 4-20 symbols",
				"required": true
			},
			{
				"type": "string",
				"name": "password",
				"description": "Password; length will be in range 6-32 symbols",
				"required": true
			},
			{
				"type": "int",
				"name": "sex",
				"description": "Sex of user: 0 - not specified (default), 1 - female, 2 - male",
				"required": false
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "ID of city, where user located (list of cities available in @(cities.get))",
				"required": false
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "account",
		"name": "account.restore",
		"params": [
			{
				"type": "string",
				"name": "hash",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "account",
		"name": "account.editInfo",
		"description": "Edit info about user",
		"params": [
			{
				"type": "string",
				"name": "firstName",
				"description": "First name",
				"required": true
			},
			{
				"type": "string",
				"name": "lastName",
				"description": "Last name",
				"required": true
			},
			{
				"type": "int",
				"name": "sex",
				"description": "Sex of user: 0 - not specified (default), 1 - female, 2 - male",
				"required": false
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "ID of city, where user located (list of cities available in @(cities.get))",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "account",
		"name": "account.changePassword",
		"description": "Change password for user. After changing password all existing sessions except current will be terminated.",
		"params": [
			{
				"type": "string",
				"name": "oldPassword",
				"description": "Old/current password",
				"required": true
			},
			{
				"type": "string",
				"name": "newPassword",
				"description": "New password",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "account",
		"name": "account.setProfilePhoto",
		"description": "Change user photo",
		"params": [
			{
				"type": "int",
				"name": "photoId",
				"description": "ID of photo",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "account",
		"name": "account.removeProfilePhoto",
		"description": "Remove profile photo",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "account",
		"name": "account.setStatus",
		"description": "Set online status",
		"params": [
			{
				"type": "int",
				"name": "status",
				"description": "1 if online, 0 if offline",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.get",
		"description": "Returns info about sights on map",
		"params": [
			{
				"type": "double",
				"name": "lat1",
				"description": "Latitude of top left point",
				"required": true
			},
			{
				"type": "double",
				"name": "lng1",
				"description": "Longitude of top left point",
				"required": true
			},
			{
				"type": "double",
				"name": "lat2",
				"description": "Latitude of bottom right point",
				"required": true
			},
			{
				"type": "double",
				"name": "lng2",
				"description": "Longitude of bottom right bottom",
				"required": true
			},
			{
				"type": "int[]",
				"name": "markId",
				"description": "IDs of marks; by default all",
				"required": false
			},
			{
				"type": "boolean",
				"name": "onlyVerified",
				"description": "Returns sights only with isVerified=1",
				"required": false
			},
			{
				"type": "int",
				"name": "count",
				"description": "Desired count of sights in results; max value - 500",
				"default": 500,
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "Offset",
				"required": false
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "sights",
		"name": "sights.getById",
		"description": "Returns info about sight by ID",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "Returns info about sight.\nIf it has nested sights, it will be returned in fields child (past) and parent (future) in Sight object.",
				"required": true
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "sights",
		"name": "sights.add",
		"description": "Add sight",
		"params": [
			{
				"type": "string",
				"name": "title",
				"description": "Title of sight",
				"required": true
			},
			{
				"type": "string",
				"name": "description",
				"description": "Description",
				"required": false
			},
			{
				"type": "double",
				"name": "lat",
				"description": "Latitude",
				"required": true
			},
			{
				"type": "double",
				"name": "lng",
				"description": "Longitude",
				"required": true
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "ID of city (list of cities available in @(cities.get))",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.edit",
		"description": "Edit info about sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "string",
				"name": "title",
				"description": "Title",
				"required": true
			},
			{
				"type": "string",
				"name": "description",
				"description": "Description",
				"required": false
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "ID of city (list of cities available in @(cities.get))",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.move",
		"description": "Edit sight position on map",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "double",
				"name": "lat",
				"description": "Latitude",
				"required": true
			},
			{
				"type": "double",
				"name": "lng",
				"description": "Longitude",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.remove",
		"description": "Remove sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.setMarks",
		"description": "Edit marks list of sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "int[]",
				"name": "markIds",
				"description": "IDs of marks, which sight needed. Comma-separated string. Empty if need get rid of all marks.",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.setPhotos",
		"description": "Edit photos of sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "int[]",
				"name": "photoIds",
				"description": "IDs of photos of sight. Empty, if need get rid of all photos.",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.setVisitState",
		"description": "Set visit state of sight for current user",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "int",
				"name": "state",
				"description": "State: 0 - not visited, 1 - visited, 2 - desired",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.getVisited",
		"description": "Return all sight IDs of visited or desired sights",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.report",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.setVerify",
		"description": "Set verification of sights. Method available only for moderators and admins.",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "boolean",
				"name": "state",
				"description": "State: 1 if verified, 0 if not",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.setArchived",
		"description": "Set archived state for sights. Method available only for moderators and admins.",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "boolean",
				"name": "state",
				"description": "State: 1 if archived, 0 if not",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.getNearby",
		"description": "Returns sights that are close to the specified place (lat, lng)",
		"params": [
			{
				"type": "double",
				"name": "lat",
				"description": "Latitude",
				"required": true
			},
			{
				"type": "double",
				"name": "lng",
				"description": "Longitude",
				"required": true
			},
			{
				"type": "int",
				"name": "distance",
				"description": "Distance in meters, 0-3000",
				"required": true
			},
			{
				"type": "int",
				"name": "count",
				"description": "Desired count of sights: 1-100",
				"required": false,
				"default": 20
			}

		],
		"onlyAuthorized": false
	},
	{
		"category": "sights",
		"name": "sights.getVisitCount",
		"description": "Returns visit state of sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "sights",
		"name": "sights.getPopular",
		"description": "Returns popular sights (by visited by others users)",
		"params": [],
		"onlyAuthorized": false
	},
	{
		"category": "sights",
		"name": "sights.getRandomPlace",
		"description": "Returns random sight of all",
		"params": [],
		"onlyAuthorized": false
	},
	{
		"category": "sights",
		"name": "sights.search",
		"description": "Search over all sights",
		"params": [
			{
				"type": "string",
				"name": "query",
				"description": "Keywords",
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "Result shift",
				"required": false
			},
			{
				"type": "int",
				"name": "count",
				"description": "Desired count",
				"required": false,
				"default": 50
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "ID of city where need search (list in @(cities.get))",
				"required": false
			},
			{
				"type": "int[]",
				"name": "markIds",
				"description": "IDs of marks in which need search (list in @(marks.get))",
				"required": false
			},
			{
				"type": "int",
				"name": "visitState",
				"description": "Visit state for current user (if authKey is specified). -1 or not specified - all, 0 - not visited, 1 - visited, 2 - desired",
				"required": false,
				"default": -1
			},
			{
				"type": "int",
				"name": "order",
				"description": "1/-1 - by date of creating; 2/-2 - by date of modified; 3 - by rating. Negative value means reverse order.",
				"required": false,
				"default": 3
			},
			{
				"type": "boolean",
				"name": "isVerified",
				"description": "1 if need only verified sights",
				"required": false
			},
			{
				"type": "boolean",
				"name": "isArchived",
				"description": "1 if need only archived sights",
				"required": false
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "sights",
		"name": "sights.getCounts",
		"description": "Returns counts of some types of sights in site: total, verified, archived.",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "photos",
		"name": "photos.getUploadUri",
		"description": "Generate and return unique URL for upload photo. Alive during 1 hour.",
		"params": [
			{
				"type": "string",
				"name": "type",
				"description": "Target: 'sight' for adding to sight, 'profile' for profile photo.",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "photos",
		"name": "photos.save",
		"description": "Save uploaded photo and get #(Photo) object",
		"params": [
			{
				"type": "string",
				"name": "hash",
				"description": "String that was received as a result of upload photos",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "photos",
		"name": "photos.getUnsorted",
		"description": "Return photos which not used in sights",
		"params": [
			{
				"type": "int",
				"name": "count",
				"description": "Desired count in result",
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "Shift resulting",
				"required": false
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "marks",
		"name": "marks.get",
		"description": "Returns list of marks",
		"params": [],
		"onlyAuthorized": false
	},
	{
		"category": "marks",
		"name": "marks.add",
		"params": [
			{
				"type": "string",
				"name": "title",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "color",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "marks",
		"name": "marks.edit",
		"params": [
			{
				"type": "int",
				"name": "markId",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "color",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "marks",
		"name": "marks.remove",
		"params": [
			{
				"type": "int",
				"name": "markId",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "comments",
		"name": "comments.get",
		"description": "Returns comments of sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "comments",
		"name": "comments.add",
		"description": "Add comment for sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "string",
				"name": "text",
				"description": "Text of comment",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "comments",
		"name": "comments.remove",
		"description": "Remove comment",
		"params": [
			{
				"type": "int",
				"name": "commentId",
				"description": "ID of comment",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "comments",
		"name": "comments.report",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "commentId",
				"description": "ID of comment",
				"required": true
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "events",
		"name": "events.get",
		"description": "Returns feed.\nLast editions and other events which occurred with owns of current user.",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "events",
		"name": "events.readAll",
		"description": "Set as 'read' all events",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "rating",
		"name": "rating.get",
		"description": "Returns rating of sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			}
		],
		"onlyAuthorized": false
	},
	{
		"category": "rating",
		"name": "rating.set",
		"description": "Set rating for sight",
		"params": [
			{
				"type": "int",
				"name": "sightId",
				"description": "ID of sight",
				"required": true
			},
			{
				"type": "int",
				"name": "rating",
				"description": "1, 0 or -1",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "cities",
		"name": "cities.get",
		"description": "Returns all cities",
		"params": [],
		"onlyAuthorized": false
	},
	{
		"category": "cities",
		"name": "cities.add",
		"description": "Add city",
		"params": [
			{
				"type": "string",
				"name": "name",
				"description": "Name of city",
				"required": true
			},
			{
				"type": "int",
				"name": "parentId",
				"description": "Parent city ID, if it is town",
				"required": false
			},
			{
				"type": "double",
				"name": "lat",
				"description": "Latitude",
				"required": true
			},
			{
				"type": "double",
				"name": "lng",
				"description": "Longitude",
				"required": true
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "interests",
		"name": "interests.getInterestInTagsByVisitOfUser",
		"description": "Returns interests of user by it visit sights",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "interests",
		"name": "interests.getInterestInTagsByRatingOfUser",
		"description": "Returns interests of user by it rating",
		"params": [],
		"onlyAuthorized": true
	},
	{
		"category": "collections",
		"name": "collections.get",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "count",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "collections",
		"name": "collections.search",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "count",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "",
				"required": false
			},
			{
				"type": "string",
				"name": "title",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "collections",
		"name": "collections.create",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "string",
				"name": "title",
				"description": "",
				"required": false
			},
			{
				"type": "string",
				"name": "text",
				"description": "",
				"required": false
			},
			{
				"type": "int[]",
				"name": "pointIds",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "collections",
		"name": "collections.edit",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "collectionId",
				"description": "",
				"required": false
			},
			{
				"type": "string",
				"name": "title",
				"description": "",
				"required": false
			},
			{
				"type": "string",
				"name": "text",
				"description": "",
				"required": false
			},
			{
				"type": "int[]",
				"name": "pointIds",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "collections",
		"name": "collections.remove",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "collectionId",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "router",
		"name": "router.generate",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "double",
				"name": "lat",
				"description": "",
				"required": false
			},
			{
				"type": "double",
				"name": "lng",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "cityId",
				"description": "",
				"required": false
			},
			{
				"type": "int[]",
				"name": "markIds",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "timeLimit",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "lengthLimit",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "moderators",
		"name": "moderators.get",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "count",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "moderators",
		"name": "moderators.promote",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "userId",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "bannedUsers",
		"name": "bannedUsers.get",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "count",
				"description": "",
				"required": false
			},
			{
				"type": "int",
				"name": "offset",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "bannedUsers",
		"name": "bannedUsers.set",
		"description": "NOT IMPLEMENTED",
		"params": [
			{
				"type": "int",
				"name": "userId",
				"description": "",
				"required": false
			},
			{
				"type": "boolean",
				"name": "state",
				"description": "",
				"required": false
			},
			{
				"type": "string",
				"name": "reason",
				"description": "",
				"required": false
			}
		],
		"onlyAuthorized": true
	},
	{
		"category": "execute",
		"name": "execute.compile",
		"description": "Universal method for call more than one method API per request.\n\nDefine variable\na=1;\n\nCreate object:\nb=new object;\n\nCreate array:\nc=new array;\n\nSet fields for array/object:\nob=new object;\nset $ob -f a,b,c -v 1,2,3;\noa=new array;\nset $oa -f 0,1,2 -v 0,1,2;\n\nRemove field from array/object:\na=new object;\nset $a -f 1,2,3 -v a,b,c;\nrem $a -k 1;\n\nGet argument from URL (pid=777):\npid=getArg pid;\n\nConvert string to int:\ne=int $e;\n\nReturn result:\nret $e;\n\nCall API method:\nd=call users.get -userIds \"vladislav805,1\"\n\nGet field of object/array:\nd=call cities.get;\nlist=$d/items;\n\nExample:\npid=getArg pid;\npid=int $pid;\nsight=call sights.getById -sightId $pid;\nownerId=$sight/ownerId;\nowner=call users.get -userIds $ownerId;\nres=new object;\nset $res -f s,u -v $sight,$owner;\nret $res",
		"params": [
			{
				"type": "string",
				"name": "code",
				"description": "Code",
				"required": true
			}
		],
		"onlyAuthorized": false
	}
]