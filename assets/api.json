{
	"methods": [
		{
			"category": "users",
			"name": "users.getAuthKey",
			"description": "Authorize user by login an password",
			"params": [
				{
					"type": "string",
					"name": "login",
					"description": "User login or email",
					"required": true
				},
				{
					"type": "string",
					"name": "password",
					"description": "User password",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "users",
			"name": "users.logout",
			"description": "Kill current session and revoke authKey",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "users",
			"name": "users.get",
			"description": "Returns info about users",
			"params": [
				{
					"type": "string[]|int[]",
					"name": "userIds",
					"description": "User IDs or logins. If not specified and has authKey, returns info about current user.",
					"required": false
				},
				{
					"type": "boolean",
					"name": "extended",
					"description": "If 1, returns ExtendedUser object. Works only for current user (did not work if specified tow or more IDs).",
					"required": false
				},
				{
					"type": "string",
					"name": "extra",
					"description": "Specify if you require some additional information. Allowed keys: 'photo', 'city', 'rating'",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "users",
			"name": "users.getAchievements",
			"description": "Returns stats of user",
			"params": [
				{
					"type": "int",
					"name": "userId",
					"description": "User ID",
					"required": true
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "users",
			"name": "users.getCityExperts",
			"description": "Returns city experts: users who have added the most sights to the site.",
			"params": [
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city; if not specified, data from all cities will be returned",
					"required": false
				},
				{
					"type": "boolean",
					"name": "onlyVerified",
					"description": "true, if needed stat with verified sights only",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "account",
			"name": "account.create",
			"description": "Create account",
			"params": [
				{
					"type": "string",
					"name": "firstName",
					"description": "First name",
					"required": true
				},
				{
					"type": "string",
					"name": "lastName",
					"description": "Last name",
					"required": true
				},
				{
					"type": "string",
					"name": "login",
					"description": "Username; length will be in range 4-20 symbols",
					"required": true
				},
				{
					"type": "string",
					"name": "password",
					"description": "Password; length will be in range 6-32 symbols",
					"required": true
				},
				{
					"type": "int",
					"name": "sex",
					"description": "Sex of user: 0 - not specified (default), 1 - female, 2 - male",
					"required": false
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city, where user located (list of cities available in @(cities.get))",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "account",
			"name": "account.restore",
			"params": [
				{
					"type": "string",
					"name": "hash",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "account",
			"name": "account.editInfo",
			"description": "Edit info about user",
			"params": [
				{
					"type": "string",
					"name": "firstName",
					"description": "First name",
					"required": true
				},
				{
					"type": "string",
					"name": "lastName",
					"description": "Last name",
					"required": true
				},
				{
					"type": "int",
					"name": "sex",
					"description": "Sex of user: 0 - not specified (default), 1 - female, 2 - male",
					"required": false
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city, where user located (list of cities available in @(cities.get))",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "account",
			"name": "account.changePassword",
			"description": "Change password for user. After changing password all existing sessions except current will be terminated.",
			"params": [
				{
					"type": "string",
					"name": "oldPassword",
					"description": "Old/current password",
					"required": true
				},
				{
					"type": "string",
					"name": "newPassword",
					"description": "New password",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "account",
			"name": "account.setProfilePhoto",
			"description": "Change user photo",
			"params": [
				{
					"type": "int",
					"name": "photoId",
					"description": "ID of photo",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "account",
			"name": "account.removeProfilePhoto",
			"description": "Remove profile photo",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "account",
			"name": "account.setStatus",
			"description": "Set online status",
			"params": [
				{
					"type": "int",
					"name": "status",
					"description": "1 if online, 0 if offline",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.get",
			"description": "Returns info about sights on map",
			"params": [
				{
					"type": "double",
					"name": "lat1",
					"description": "Latitude of top left point",
					"required": true
				},
				{
					"type": "double",
					"name": "lng1",
					"description": "Longitude of top left point",
					"required": true
				},
				{
					"type": "double",
					"name": "lat2",
					"description": "Latitude of bottom right point",
					"required": true
				},
				{
					"type": "double",
					"name": "lng2",
					"description": "Longitude of bottom right bottom",
					"required": true
				},
				{
					"type": "int[]",
					"name": "markId",
					"description": "IDs of marks; by default all",
					"required": false
				},
				{
					"type": "boolean",
					"name": "onlyVerified",
					"description": "Returns sights only with isVerified=1",
					"required": false
				},
				{
					"type": "int",
					"name": "count",
					"description": "Desired count of sights in results; max value - 500",
					"default": 500,
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "Offset",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "sights",
			"name": "sights.getById",
			"description": "Returns info about sight by ID",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "Returns info about sight.\nIf it has nested sights, it will be returned in fields child (past) and parent (future) in Sight object.",
					"required": true
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "sights",
			"name": "sights.add",
			"description": "Add sight",
			"params": [
				{
					"type": "string",
					"name": "title",
					"description": "Title of sight",
					"required": true
				},
				{
					"type": "string",
					"name": "description",
					"description": "Description",
					"required": false
				},
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude",
					"required": true
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude",
					"required": true
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city (list of cities available in @(cities.get))",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.edit",
			"description": "Edit info about sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "string",
					"name": "title",
					"description": "Title",
					"required": true
				},
				{
					"type": "string",
					"name": "description",
					"description": "Description",
					"required": false
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city (list of cities available in @(cities.get))",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.move",
			"description": "Edit sight position on map",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude",
					"required": true
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.remove",
			"description": "Remove sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.setMarks",
			"description": "Edit marks list of sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "int[]",
					"name": "markIds",
					"description": "IDs of marks, which sight needed. Comma-separated string. Empty if need get rid of all marks.",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.setPhotos",
			"description": "Edit photos of sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "int[]",
					"name": "photoIds",
					"description": "IDs of photos of sight. Empty, if need get rid of all photos.",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.setVisitState",
			"description": "Set visit state of sight for current user",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "int",
					"name": "state",
					"description": "State: 0 - not visited, 1 - visited, 2 - desired",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.getVisited",
			"description": "Return all sight IDs of visited or desired sights",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.report",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.setVerify",
			"description": "Set verification of sights. Method available only for moderators and admins.",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "boolean",
					"name": "state",
					"description": "State: 1 if verified, 0 if not",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.setArchived",
			"description": "Set archived state for sights. Method available only for moderators and admins.",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "boolean",
					"name": "state",
					"description": "State: 1 if archived, 0 if not",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.getNearby",
			"description": "Returns sights that are close to the specified place (lat, lng)",
			"params": [
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude",
					"required": true
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude",
					"required": true
				},
				{
					"type": "int",
					"name": "distance",
					"description": "Distance in meters, 0-3000",
					"required": true
				},
				{
					"type": "int",
					"name": "count",
					"description": "Desired count of sights: 1-100",
					"required": false,
					"default": 20
				}

			],
			"onlyAuthorized": false
		},
		{
			"category": "sights",
			"name": "sights.getVisitCount",
			"description": "Returns visit state of sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "sights",
			"name": "sights.getRandomSightId",
			"description": "Returns random sight id of all",
			"params": [],
			"onlyAuthorized": false
		},
		{
			"category": "sights",
			"name": "sights.search",
			"description": "Search over all sights",
			"params": [
				{
					"type": "string",
					"name": "query",
					"description": "Keywords",
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "Result shift",
					"required": false
				},
				{
					"type": "int",
					"name": "count",
					"description": "Desired count",
					"required": false,
					"default": 50
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city where need search (list in @(cities.get))",
					"required": false
				},
				{
					"type": "int[]",
					"name": "markIds",
					"description": "IDs of marks in which need search (list in @(marks.get))",
					"required": false
				},
				{
					"type": "int",
					"name": "visitState",
					"description": "Visit state for current user (if authKey is specified). -1 or not specified - all, 0 - not visited, 1 - visited, 2 - desired",
					"required": false,
					"default": -1
				},
				{
					"type": "int",
					"name": "order",
					"description": "1/-1 - by date of creating; 2/-2 - by date of modified; 3 - by rating. Negative value means reverse order.",
					"required": false,
					"default": 3
				},
				{
					"type": "boolean",
					"name": "isVerified",
					"description": "true if need only verified sights",
					"required": false
				},
				{
					"type": "boolean",
					"name": "isArchived",
					"description": "true if need only archived sights",
					"required": false
				},
				{
					"type": "boolean",
					"name": "onlyWithPhotos",
					"description": "true if need sights with photos only",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "sights",
			"name": "sights.getCounts",
			"description": "Returns counts of some types of sights in site: total, verified, archived.",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "photos",
			"name": "photos.getUploadUri",
			"description": "Generate and return unique URL for upload photo. Alive during 1 hour.",
			"params": [
				{
					"type": "string",
					"name": "type",
					"description": "Target: 'sight' for adding to sight, 'profile' for profile photo.",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "photos",
			"name": "photos.save",
			"description": "Save uploaded photo and get #(Photo) object",
			"params": [
				{
					"type": "string",
					"name": "hash",
					"description": "String that was received as a result of upload photos",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "photos",
			"name": "photos.getUnsorted",
			"description": "Return photos which not used in sights",
			"params": [
				{
					"type": "int",
					"name": "count",
					"description": "Desired count in result",
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "Shift resulting",
					"required": false
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "marks",
			"name": "marks.get",
			"description": "Returns list of marks",
			"params": [],
			"onlyAuthorized": false
		},
		{
			"category": "marks",
			"name": "marks.add",
			"description": "Add new mark",
			"params": [
				{
					"type": "string",
					"name": "title",
					"description": "Title",
					"required": true
				},
				{
					"type": "int",
					"name": "color",
					"description": "Decimal value of HEX color",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "marks",
			"name": "marks.edit",
			"params": [
				{
					"type": "int",
					"name": "markId",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "color",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "marks",
			"name": "marks.remove",
			"params": [
				{
					"type": "int",
					"name": "markId",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "comments",
			"name": "comments.get",
			"description": "Returns comments of sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "comments",
			"name": "comments.add",
			"description": "Add comment for sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "string",
					"name": "text",
					"description": "Text of comment",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "comments",
			"name": "comments.remove",
			"description": "Remove comment",
			"params": [
				{
					"type": "int",
					"name": "commentId",
					"description": "ID of comment",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "comments",
			"name": "comments.report",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "int",
					"name": "commentId",
					"description": "ID of comment",
					"required": true
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "events",
			"name": "events.getCount",
			"description": "Returns count of unviewed notifications.",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "events",
			"name": "events.get",
			"description": "Returns feed.\nLast editions and other events which occurred with owns of current user. All types of events described on #(Event) object page.",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "events",
			"name": "events.readAll",
			"description": "Set as 'read' all events",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "rating",
			"name": "rating.get",
			"description": "Returns rating of sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "rating",
			"name": "rating.set",
			"description": "Set rating for sight",
			"params": [
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"required": true
				},
				{
					"type": "int",
					"name": "rating",
					"description": "1, 0 or -1",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "cities",
			"name": "cities.get",
			"description": "Returns all cities",
			"params": [],
			"onlyAuthorized": false
		},
		{
			"category": "cities",
			"name": "cities.add",
			"description": "Add city",
			"params": [
				{
					"type": "string",
					"name": "name",
					"description": "Name of city",
					"required": true
				},
				{
					"type": "int",
					"name": "parentId",
					"description": "Parent city ID, if it is town",
					"required": false
				},
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude",
					"required": true
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "interests",
			"name": "interests.getInterestInTagsByVisitOfUser",
			"description": "Returns interests of user by it visit sights",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "interests",
			"name": "interests.getInterestInTagsByRatingOfUser",
			"description": "Returns interests of user by it rating",
			"params": [],
			"onlyAuthorized": true
		},
		{
			"category": "collections",
			"name": "collections.get",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "int",
					"name": "count",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "collections",
			"name": "collections.search",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "int",
					"name": "count",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "",
					"required": false
				},
				{
					"type": "string",
					"name": "title",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "collections",
			"name": "collections.create",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "string",
					"name": "title",
					"description": "",
					"required": false
				},
				{
					"type": "string",
					"name": "text",
					"description": "",
					"required": false
				},
				{
					"type": "int[]",
					"name": "pointIds",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "collections",
			"name": "collections.edit",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "int",
					"name": "collectionId",
					"description": "",
					"required": false
				},
				{
					"type": "string",
					"name": "title",
					"description": "",
					"required": false
				},
				{
					"type": "string",
					"name": "text",
					"description": "",
					"required": false
				},
				{
					"type": "int[]",
					"name": "pointIds",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "collections",
			"name": "collections.remove",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "int",
					"name": "collectionId",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "router",
			"name": "router.generate",
			"description": "NOT IMPLEMENTED",
			"params": [
				{
					"type": "double",
					"name": "lat",
					"description": "",
					"required": false
				},
				{
					"type": "double",
					"name": "lng",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "cityId",
					"description": "",
					"required": false
				},
				{
					"type": "int[]",
					"name": "markIds",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "timeLimit",
					"description": "",
					"required": false
				},
				{
					"type": "int",
					"name": "lengthLimit",
					"description": "",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "admin",
			"name": "admin.getUserJob",
			"description": "Only admins can call this method. Returns moderators list",
			"params": [
				{
					"type": "int",
					"name": "count",
					"description": "Desired count of results",
					"default": 50,
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "Shift of result",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "admin",
			"name": "admin.setUserJob",
			"description": "Only admins can call this method. Add or remove moderator",
			"params": [
				{
					"type": "int",
					"name": "userId",
					"description": "ID of user",
					"required": true
				},
				{
					"type": "string",
					"name": "status",
					"description": "Allowed values: 'USER', 'MODERATOR', 'ADMIN'",
					"required": true
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "admin",
			"name": "admin.getBanned",
			"description": "Only admins can call this method. Returns list of banned users.",
			"params": [
				{
					"type": "int",
					"name": "count",
					"description": "Desired count of results",
					"default": 50,
					"required": false
				},
				{
					"type": "int",
					"name": "offset",
					"description": "Shift of results",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "admin",
			"name": "admin.setBan",
			"description": "Only admins can call this method. Ban user.",
			"params": [
				{
					"type": "int",
					"name": "userId",
					"description": "ID of user",
					"required": true
				},
				{
					"type": "int",
					"name": "reason",
					"description": "Reason from list: 0 - unban",
					"required": true
				},
				{
					"type": "string",
					"name": "comment",
					"description": "Comment",
					"required": false
				}
			],
			"onlyAuthorized": true
		},
		{
			"category": "execute",
			"name": "execute.compile",
			"description": "Universal method for call more than one method API per request.\n\nDefine variable\na=1;\n\nCreate object:\nb=new object;\n\nCreate array:\nc=new array;\n\nSet fields for array/object:\nob=new object;\nset $ob -f a,b,c -v 1,2,3;\noa=new array;\nset $oa -f 0,1,2 -v 0,1,2;\n\nRemove field from array/object:\na=new object;\nset $a -f 1,2,3 -v a,b,c;\nrem $a -k 1;\n\nGet argument from URL (pid=777):\npid=getArg pid;\n\nConvert string to int:\ne=int $e;\n\nReturn result:\nret $e;\n\nCall API method:\nd=call @(users.get) -userIds \"vladislav805,1\"\n\nGet field of object/array:\nd=call @(cities.get);\nlist=$d/items;\n\nExample:\npid=getArg pid;\npid=int $pid;\nsight=call @(sights.getById) -sightId $pid;\nownerId=$sight/ownerId;\nowner=call @(users.get) -userIds $ownerId;\nres=new object;\nset $res -f s,u -v $sight,$owner;\nret $res",
			"params": [
				{
					"type": "string",
					"name": "code",
					"description": "Code",
					"required": true
				}
			],
			"onlyAuthorized": false
		},
		{
			"category": "neuralNetwork",
			"name": "neuralNetwork.test",
			"description": "Test for neural network",
			"params": [],
			"onlyAuthorized": true
		}
	],
	"objects": [
		{
			"name": "User",
			"description": "Basic user information",
			"fields": [
				{
					"type": "int",
					"name": "userId",
					"description": "ID of user",
					"optional": false
				},
				{
					"type": "string",
					"name": "login",
					"description": "Username",
					"optional": false
				},
				{
					"type": "string",
					"name": "firstName",
					"description": "First name",
					"optional": false
				},
				{
					"type": "string",
					"name": "lastName",
					"description": "Last name",
					"optional": false
				},
				{
					"type": "int",
					"name": "sex",
					"description": "Sex: 0 - not specified, 1 - female, 2 - male",
					"optional": false
				},
				{
					"type": "long",
					"name": "lastSeen",
					"description": "Last visit user on site on unixtime",
					"optional": false
				},
				{
					"type": "boolean",
					"name": "isOnline",
					"description": "true if user now on site",
					"optional": false
				},
				{
					"type": "#(Photo)",
					"name": "photo",
					"description": "Object of profile photo (returns if extra contains 'photo', otherwise null)",
					"optional": true
				},
				{
					"type": "#(City)",
					"name": "city",
					"description": "Object of city, where user live (returns if extra contains 'city', otherwise null)",
					"optional": true
				},
				{
					"type": "int",
					"name": "rating",
					"description": "Rating of user by their sights raging (returns if extra contains 'rating', otherwise field not included)",
					"optional": true
				}
			]
		},
		{
			"name": "Sight",
			"description": "Information about sight",
			"fields": [
				{
					"type": "int",
					"name": "ownerId",
					"description": "Author user ID",
					"optional": false
				},
				{
					"type": "int",
					"name": "sightId",
					"description": "ID of sight",
					"optional": false
				},
				{
					"type": "int[]",
					"name": "markIds",
					"description": "Array of IDs of marks",
					"optional": false
				},
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude",
					"optional": false
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude",
					"optional": false
				},
				{
					"type": "long",
					"name": "dateCreated",
					"description": "Date in unixtime when sight was created",
					"optional": false
				},
				{
					"type": "long",
					"name": "dateUpdated",
					"description": "Date in unixtime when sight was last edited (if not editions, 0)",
					"optional": false
				},
				{
					"type": "string",
					"name": "title",
					"description": "Title of sight",
					"optional": false
				},
				{
					"type": "string",
					"name": "description",
					"description": "Description",
					"optional": false
				},
				{
					"type": "#(City)",
					"name": "city",
					"description": "City, where sight is located; if not specified by user, may be null",
					"optional": false
				},
				{
					"type": "boolean",
					"name": "isVerified",
					"description": "true if sight is officially approved",
					"optional": false
				},
				{
					"type": "boolean",
					"name": "isArchived",
					"description": "true if sight no more exists",
					"optional": false
				},
				{
					"type": "int",
					"name": "visitState",
					"description": "State of visit current user: 0 - not visited, 1 - visited, 2 - desired. If user not authorized, always equals 0",
					"optional": false
				},
				{
					"type": "#(Rating)",
					"name": "rating",
					"description": "User rating of sight",
					"optional": false
				},
				{
					"type": "boolean",
					"name": "canModify",
					"description": "true, if current user can modify information of this sight",
					"optional": false
				},
				{
					"type": "#(Photo)",
					"name": "photo",
					"description": "First attached photo to sight. If no photos - null",
					"optional": false
				},
				{
					"type": "#(Sight)",
					"name": "child",
					"description": "Only @(sights.getById). Nested sight: child - past sight on this place. If no child - field not include.",
					"optional": true
				},
				{
					"type": "#(Sight)",
					"name": "parent",
					"description": "Only @(sights.getById). Nested sight: parent - future sight on this place. If no parent - field not include.",
					"optional": true
				}
			]
		},
		{
			"name": "City",
			"description": "Information about city",
			"fields": [
				{
					"type": "int",
					"name": "cityId",
					"description": "ID of city",
					"optional": false
				},
				{
					"type": "string",
					"name": "name",
					"description": "Name of city",
					"optional": false
				},
				{
					"type": "int|null",
					"name": "parentId",
					"description": "ID of parent city, if current in district of parent",
					"optional": false
				},
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude (only in @(cities.get) with extended=1)",
					"optional": true
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude (only in @(cities.get) with extended=1)",
					"optional": true
				}
			]
		},
		{
			"name": "Photo",
			"description": "Information about photo",
			"fields": [
				{
					"type": "int",
					"name": "ownerId",
					"description": "ID of user-author",
					"optional": false
				},
				{
					"type": "int",
					"name": "photoId",
					"description": "ID of photo",
					"optional": false
				},
				{
					"type": "long",
					"name": "date",
					"description": "Date of upload in unixtime",
					"optional": false
				},
				{
					"type": "string",
					"name": "photo200",
					"description": "URL to photo thumbnail",
					"optional": false
				},
				{
					"type": "string",
					"name": "photoMax",
					"description": "URL to photo max resolution",
					"optional": false
				},
				{
					"type": "int",
					"name": "type",
					"description": "Type: 1 - sight photo, 2 - profile photo",
					"optional": false
				},
				{
					"type": "string[]",
					"name": "prevailColors",
					"description": "List of prevail colors on photo. Format: 'HHHHHH,PP', were HHHHHH - HEX color, PP - percentage.",
					"optional": true
				},
				{
					"type": "double",
					"name": "lat",
					"description": "Latitude",
					"optional": true
				},
				{
					"type": "double",
					"name": "lng",
					"description": "Longitude",
					"optional": true
				}
			]
		},
		{
			"name": "Rating",
			"description": "Information about rating of sight",
			"fields": [
				{
					"type": "int",
					"name": "value",
					"description": "Rating value of all",
					"optional": false
				},
				{
					"type": "int",
					"name": "userValue",
					"description": "What select current user",
					"optional": false
				}
			]
		},
		{
			"name": "Mark",
			"description": "Information about mark",
			"fields": [
				{
					"type": "int",
					"name": "markId",
					"description": "ID of mark",
					"optional": false
				},
				{
					"type": "string",
					"name": "title",
					"description": "Title of mark",
					"optional": false
				},
				{
					"type": "int",
					"name": "color",
					"description": "Number -> HEX = #HEX color",
					"optional": false
				},
				{
					"type": "int",
					"name": "count",
					"description": "Only in @(marks.get) with needCount=1. Count of sights with this mark",
					"optional": true
				}
			]
		},
		{
			"name": "Event",
			"description": "Information about event in feed. Types:\n1 = sight verified\n8 = added comment\n12 = archived\n14 = sight rating up\n15 = sight rating down",
			"fields": [
				{
					"type": "int",
					"name": "eventId",
					"description": "ID of event",
					"optional": false
				},
				{
					"type": "long",
					"name": "date",
					"description": "Date in unixtime, when event occurred",
					"optional": false
				},
				{
					"type": "int",
					"name": "type",
					"description": "Type of event",
					"optional": false
				},
				{
					"type": "int",
					"name": "ownerUserId",
					"description": "Owner of object",
					"optional": false
				},
				{
					"type": "int",
					"name": "actionUserId",
					"description": "User, which make action",
					"optional": false
				},
				{
					"type": "int",
					"name": "subjectId",
					"description": "Object on which the action was carried out",
					"optional": false
				},
				{
					"type": "boolean",
					"name": "isNew",
					"description": "true, if event yet not read",
					"optional": false
				}
			]
		},
		{
			"name": "Comment",
			"description": "Information about comment",
			"fields": [
				{
					"type": "int",
					"name": "commentId",
					"description": "ID of comment",
					"optional": false
				},
				{
					"type": "int",
					"name": "userId",
					"description": "ID of user-author",
					"optional": false
				},
				{
					"type": "long",
					"name": "date",
					"description": "Date in unixtime",
					"optional": false
				},
				{
					"type": "string",
					"name": "text",
					"description": "Text",
					"optional": false
				},
				{
					"type": "boolean",
					"name": "canModify",
					"description": "true if current user can edit this comment",
					"optional": false
				}
			]
		},
		{
			"name": "Session",
			"description": "Information about auth.",
			"fields": [
				{
					"type": "int",
					"name": "authId",
					"description": "ID of authorization",
					"optional": false
				},
				{
					"type": "string",
					"name": "authKey",
					"description": "Session key",
					"optional": false
				},
				{
					"type": "int",
					"name": "userId",
					"description": "ID of user",
					"optional": false
				},
				{
					"type": "int",
					"name": "access",
					"description": "Mask of !(access) for this session",
					"optional": false
				},
				{
					"type": "long",
					"name": "date",
					"description": "Date in unixtime when session created",
					"optional": false
				},
				{
					"type": "#(User)",
					"name": "user",
					"description": "Current user information",
					"optional": true
				}
			]
		}
	],
	"pages": [
		{
			"id": "access",
			"title": "Session access mask",
			"content": [
				{
					"type": "text",
					"content": "Mask of access for given token"
				},
				{
					"type": "table",
					"header": [
						{ "title": "Value", "key": "value" },
						{ "title": "Name" , "key": "name" },
						{ "title": "Description", "key": "description" }
					],
					"content": [
						{ "value": 0, "name": "BASIC_INFO", "description": "Basic info (granted always)" },
						{ "value": 1, "name": "SIGHTS_READONLY", "description": "Allow get added sights by current user" },
						{ "value": 2, "name": "SIGHTS_WRITE", "description": "Allow add/edit/move/remove sights of current user" },
						{ "value": 4, "name": "SIGHTS_PRIVATE_MODE", "description": "Allow set sights visit state of current user" },
						{ "value": 8, "name": "SIGHTS_MODERATOR", "description": "Allow make verified and archived sights" },
						{ "value": 16, "name": "PHOTOS", "description": "Allow get photos uploaded by current user" },
						{ "value": 32, "name": "MARKS_MODERATOR", "description": "Allow add/edit/remove marks" },
						{ "value": 64, "name": "COMMENTS_WRITE", "description": "Allow write comments from current user" },
						{ "value": 128, "name": "EVENTS", "description": "Allow get event feed" },
						{ "value": 256, "name": "RATING_READONLY", "description": "Allow get sight ratings of current user" },
						{ "value": 512, "name": "RATING_MODIFY", "description": "Allow add rating for sights from current user" },
						{ "value": 1024, "name": "CITIES_MODERATOR", "description": "Allow add/edit/remove cities" },
						{ "value": 2048, "name": "COLLECTIONS_READONLY", "description": "Allow get collections created by current user" },
						{ "value": 4096, "name": "COLLECTIONS_WRITE", "description": "Allow add/edit/remove collections of current user" },
						{ "value": 8192, "name": "NEURAL_NETWORK_RESULT", "description": "Allow get and use results from neural network" },
						{ "value": 16384, "name": "ACCOUNT_MODIFY", "description": "Allow modify private info of user" },
						{ "value": 32768, "name": "PRIVATE_API", "description": "Allow use private admin API" }
					]
				}
			]
		}
	]
}
